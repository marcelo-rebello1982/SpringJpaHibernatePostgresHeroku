
# define profiles database
spring.profiles.active=dev


jwt.secret=SequenciaDeCaracteresParaAssinarToken
#miliseguntos para expiração do token. Para os testes usaremos 1 minuto, mas para situações reais deve ser bem maior (tipo 24h, uma semana, etc).
jwt.expiration=600000
default.sender=mp.rebello.martins@gmail.com
default.recipient=mp.rebello.martins@gmail.com


## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.initial-size=10
spring.datasource.tomcat.min-idle=5
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.validation-query=select 1;
spring.datasource.tomcat.time-between-eviction-runs-millis=600000
spring.datasource.tomcat.min-evictable-idle-time-millis=300000
spring.datasource.separator=;

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.default_schema=sistema
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.sql.init.encoding=UTF-8
spring.jpa.open-in-view=false
spring.jpa.show-sql=true

spring.main.allow-bean-definition-overriding=true

spring.jpa.properties.javax.persistence.schema-generation.scripts.action=none
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=script_drop-and-create_schema.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=scrip_drop-and-create.sql
spring.devtools.add-properties=false

# test query to exec when checking conn is alive
spring.datasource.hikari.connectionTestQuery=SELECT 1


# logs for aplicattion
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss} - %msg%n
logging.pattern.file="%d{dd-MM-yyyy} [%thread] %-5level %logger{36} - %msg%n"
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE
logging.file.name=hibernate_log_file.log
logging.level.org.hibernate=INFO
logging.level.web=DEBUG
logging.level.root=WARN


# PLEASE, FOR YOU HELP, DON'T REMOVE THIS ABOVE LINE,
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=TRACE
org.springframework.web.level="DEBUG"
debug=false
logging.level.org.springframework.web=DEBUG

# SPRING MVC (HttpMapperProperties)
http.mappers.json-pretty-print=false # pretty print JSON
http.mappers.json-sort-keys=false # sort keys
spring.mvc.locale=pt_BR
spring.mvc.date-format=dd/MM/yyyy

# PREFIX_ERROR_CODE / POSTFIX_ERROR_CODE
spring.mvc.message-codes-resolver-format=PREFIX_ERROR_CODE
spring.resources.add-mappings=true

# FLYWAY (FlywayProperties)
flyway.locations=classpath:db/migrations/{vendor}
flyway.schemas=sistema
flyway.initVersion=1
flyway.sql-migration-prefix=V
flyway.sql-migration-suffix=.sql
flyway.enabled=true
flyway.url=jdbc:postgresql://localhost:5432/dev
flyway.user=usuario
flyway.password=usuario